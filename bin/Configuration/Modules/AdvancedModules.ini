[XMLRPC]
    ; ##
    ; ## Scripting XMLRPC mapper
    ; ##

    ; If enabled, this will post an event, "xmlrpc_uri(string)" to the
    ; script concurrently with the first remote_data event.
    ; This will contain the fully qualified URI an external site needs
    ; to use to send XMLRPC requests to that script

    ;XmlRpcRouterModule = "XmlRpcRouterModule"
    ;XmlRpcPort = 20800

[Hypergrid]
    ; Keep it false for now. Making it true requires the use of a special client in order to access inventory
    safemode = false

[Concierge]
    ; Enable concierge module
    ; Default is false
    enabled = false

    ; name of the concierge
    whoami = "jeeves"

    ; password for updating the welcome message templates via XmlRpc
    password = SECRET

    ; regex specifying for which regions concierge service is desired; if
    ; empty, then for all
    regions = "^MeetingSpace-"

    ; for each region that matches the regions regexp you can provide
    ; (optionally) a welcome template using format substitution:
    ; {0} is replaced with the name of the avatar entering the region
    ; {1} is replaced with the name of the region
    ; {2} is replaced with the name of the concierge (whoami variable above)

    welcomes = /path/to/welcome/template/directory

    ; Concierge can send attendee lists to an event broker whenever an
    ; avatar enters or leaves a concierged region. the URL is subject
    ; to format substitution:
    ; {0} is replaced with the region's name
    ; {1} is replaced with the region's UUID
    broker = "http://broker.place.com/{1}"


[SVN]
    Enabled = false
    Directory = SVNmodule\repo
    URL = "svn://your.repo.here/"
    Username = "user"
    Password = "password"
    ImportOnStartup = false
    Autosave = false
    AutoSavePeriod = 15 ; Number of minutes between autosave backups


; Uncomment the following for IRC bridge
; experimental, so if it breaks... keep both parts... yada yada
; also, not good error detection when it fails
;[IRC]
    ;enabled = true ; you need to set this otherwise it won't connect
    ;server  = name.of.irc.server.on.the.net
    ;; user password - only use this if the server requires one
    ;password = mypass
    ;nick    = OpenSimBotNameProbablyMakeThisShorter
    ;channel = #the_irc_channel_you_want_to_connect_to
    ;user    = "USER OpenSimBot 8 * :I'm an OpenSim to IRC bot"
    ;port = 6667
    ;; channel to listen for configuration commands
    ;commands_enabled = false
    ;command_channel = 2777
    ;report_clients = true
    ;; relay private chat connections
    ;; relay_private_channels = true: will relay IRC chat from/to private in-world channels
    ;; relay_private_channel_out -- channel to send messages out to the IRC bridge
    ;; relay_private_channel_in -- channel to receive message from the IRC bridge
    ;; relay_chat = false: IRC bridge will not relay normal chat
    ;; access_password -- simple security device
    ;;
    ;; so, to just relay chat from an IRC channel to in-world region and vice versa:
    ;;
    ;;     relay_private_channels = false
    ;;     relay_chat = true
    ;;
    ;; to relay chat only to/from private in-world channels:
    ;;
    ;;     relay_chat = false
    ;;     relay_private_channels = true
    ;;     relay_private_channel_in = 2226
    ;;     relay_private_channel_out = 2225
    ;;
    ;; in this example, all chat coming in from IRC will be send out via
    ;; in-world channel 2226, and all chat from in-world channel 2225 will
    ;; be relayed to the IRC channel.
    ;;
    ;relay_private_channels = false
    ;relay_private_channel_in = 2226
    ;relay_private_channel_out = 2225
    ;relay_chat = true
    ;access_password = foobar

    ;;fallback_region = name of "default" region
    ;;MSGformat fields : 0=botnick, 1=user, 2=region, 3=message
    ;; must start with "PRIVMSG {0} : " or irc server will get upset
    ;;for <bot>:<user in region> :<message>
    ;;msgformat = "PRIVMSG {0} :<{1} in {2}>: {3}"
    ;;for <bot>:<message> - <user of region> :
    ;msgformat = "PRIVMSG {0} : {3} - {1} of {2}"
    ;;for <bot>:<message> - from <user> :
    ;;msgformat = "PRIVMSG {0} : {3} - from {1}"

    ;; exclude_list allows you to stop the IRC connector from announcing the
    ;;arrival and departure of certain users. For example: admins, bots.

    ;exclude_list=User 1,User 2,User 3


[SMTP]
    enabled=false

    ;enabled=true
    ;internal_object_host=lsl.opensim.local
    ;host_domain_header_from=127.0.0.1
    ;SMTP_SERVER_HOSTNAME=127.0.0.1
    ;SMTP_SERVER_PORT=25
    ;SMTP_SERVER_LOGIN=foo
    ;SMTP_SERVER_PASSWORD=bar